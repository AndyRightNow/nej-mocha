#!/usr/bin/env node

const {
    spawn
} = require('child_process');
const path = require('path');
const chalk = require('chalk');
const CDP = require('chrome-remote-interface');

const server = require('./../server');
const config = require('./../config');
const userConfig = require('./../src/get-user-config');
const parseReport = require('./../src/parse-report');
const printReport = require('./../src/print-report');

const testRunnerProcess = spawn(`${userConfig.chromePath}`.replace(/\"/g, ""), [
    "--remote-debugging-port=9222",
]);

CDP((client) => {
    // extract domains
    const {
        Network,
        Page,
        DOM,
        Runtime
    } = client;

    Page.loadEventFired(() => {
        DOM.enable()
            .then(() => {
                return Runtime.evaluate({
                    expression: `globalPromise`
                });
            })
            .then((res) => {
                console.log(chalk.green(" Tests are running..."));

                return Runtime.awaitPromise({
                    promiseObjectId: res.result.objectId
                });
            })
            .then(() => DOM.getDocument())
            .then((res) => {
                return parseReport(DOM, res.root.nodeId);
            })
            .then((res) => {
                testRunnerProcess.kill(0);
                return printReport(res);
            })
            .then((res) => {
                process.exit(0);
            })
            .catch((err) => {
                console.log(err);
                testRunnerProcess.kill(0);
                process.exit(0);
            });
    });

    // enable events then start!
    Promise.all([
            Network.enable(),
            Page.enable()
        ]).then(() => {
            return Page.navigate({
                url: `http://localhost:${config.PORT}/${config.TEST_INDEX}`
            });
        })
        .catch((err) => {
            testRunnerProcess.kill(0);
            process.exit(0);
            client.close();
        });
}).on('error', (err) => {
    // cannot connect to the remote endpoint
    console.error(err);
    console.log("");
    console.log("");
    console.log(chalk.red("  Please close all chrome browser processes before you start the tests"));
    testRunnerProcess.kill(0);
    process.exit(0);
});